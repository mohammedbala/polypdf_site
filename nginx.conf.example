# Example Nginx configuration for polypdf-site
# Place this in /etc/nginx/sites-available/polypdf-site and create a symlink to sites-enabled

server {
    listen 80;
    listen [::]:80;
    server_name polypdf.app www.polypdf.app;  # Replace with your domain

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name polypdf.app www.polypdf.app;  # Replace with your domain

    # SSL configuration (update paths to your certificates)
    ssl_certificate /etc/letsencrypt/live/polypdf.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/polypdf.app/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Root directory for the React build files
    root /var/www/html/polypdf-site;
    index index.html;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Handle React Router - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;

    # Logs
    access_log /var/log/nginx/polypdf-site.access.log;
    error_log /var/log/nginx/polypdf-site.error.log;
}