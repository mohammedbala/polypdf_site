name: CI/CD Pipeline for polypdf-site

on:
  push:
    branches:
      - master  # Changed from main to master since that's your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up SSH Agent
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add Droplet to Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to Droplet
        run: |
          ssh ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts

            # Create directory if it doesn't exist
            sudo mkdir -p /var/www/polypdf-site
            sudo chown -R $USER:$USER /var/www/polypdf-site

            # Navigate to the polypdf-site directory
            cd /var/www

            # Clone repository if it doesn't exist, otherwise pull updates
            if [ ! -d "polypdf-site/.git" ]; then
              git clone https://github.com/mohammedbala/polypdf_site.git polypdf-site
              cd polypdf-site
            else
              cd polypdf-site
              git stash
              git pull origin master
            fi

            # Install dependencies and build the React app
            npm install
            npm run build

            # Install serve globally if not already installed
            if ! command -v serve &> /dev/null; then
              npm install -g serve
            fi
            
            # Check if the app is already running in pm2
            if pm2 describe polypdf-site > /dev/null 2>&1; then
              pm2 reload polypdf-site
            else
              # Serve the build folder on port 3001 (or your preferred port)
              pm2 start serve --name "polypdf-site" -- -s build -l 3001
            fi

            # Save pm2 configuration
            pm2 save
            
            # Optional: If using nginx, restart it to pick up any config changes
            # sudo systemctl reload nginx
          EOF